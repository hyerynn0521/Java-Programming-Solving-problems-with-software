package StringsSecondAssignments;


/**
 * Write a description of Part1 here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Part1 {
    public int findStopCodon(String dna, int startIndex, String stopCodon){
        
        int currIndex = dna.indexOf(stopCodon, startIndex +3);
        while (currIndex != -1){
            if ((currIndex - startIndex )%3 ==0){
                return currIndex;
            }
            else{
                currIndex = dna.indexOf(stopCodon, currIndex+1);
            }
            //if the index has reached the end
            
        }
        
        return -1;
    }
    public void testFindStopCodon(){
        //has stopcodon but not multiple of 3
        String dna = "GCGCGCGCCAAAATTAAGAAADS";
        int startIndex = 4;
        String stopCodon= "TAA";
        //should return 15
        int result=findStopCodon(dna, startIndex, stopCodon);
        System.out.println(result);
    }
    public String findGene( String dna, int where){
        int startIndex= dna.indexOf("ATG", where);
        int minIndex=0;
        if (startIndex == -1){
            return "";
        }
        int taaIndex = findStopCodon(dna, startIndex, "TAA");
        int tagIndex = findStopCodon(dna, startIndex, "TAG");
        int tgaIndex = findStopCodon(dna, startIndex, "TGA");
        if (taaIndex == -1 ||(tgaIndex != -1 && tgaIndex<taaIndex)){
            minIndex = tgaIndex;
        }
        else{
            minIndex = taaIndex;
      
        }
        if (minIndex == -1|| (tagIndex != -1 && tagIndex<minIndex)){
            minIndex = tagIndex;
        }
        if (minIndex == -1){
            return "";
        }
        return dna.substring(startIndex, minIndex +3);
    }
    public void testFindGene(){
        String dna = "xyxyyyyyydsfysyyyyTAATAAafdsfjj";
        System.out.println(" DNA is: "+dna);
        int where = 0;
        System.out.println("Gene is: "+findGene(dna, where));
        
        dna = "TGTGAAATGxyxyyyyyyyyyTGAAATAGCG";
        System.out.println("DNA is: "+dna);
        System.out.println("Gene is: "+findGene(dna, where));
        
        dna = "xxxyyyysfysyyssTGAdsfhhhsjTAA";
        System.out.println("DNA is: "+dna);
        System.out.println("Gene is: "+findGene(dna, where));
        
        dna = "xxxyyyysfysyyssATGdsfhhhsjTAAdsfsa";
        System.out.println("DNA is: "+dna);
        System.out.println("Gene is: "+findGene(dna, where));
    }
    public void printAllGenes(String dna){
        int startIndex = 0;
        while (true){
            String currGene = findGene(dna, startIndex);
            if (currGene.isEmpty()){
                break;
            }
            System.out.println(currGene);
            startIndex = dna.indexOf(currGene, startIndex)+currGene.length();
        }
    }
    
        
        // should return ATGXXXXXXTAA and ATGxxxxxxTAG
        
    
}
