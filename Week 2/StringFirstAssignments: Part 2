package StringFirstAssignments;


/**
 * Write a description of Part2 here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class Part2 {
    public String findSimpleGene(String dna, String StartCodon, String StopCodon){
        String result = "";
        int startindex = dna.indexOf(StartCodon);
        if (startindex==-1){
            return result = "no gene: no start codon";
        }
        int stopindex = dna.indexOf(StopCodon, startindex+3);
        if (stopindex==-1){
            return result = "no gene: no stop codon";
        }
        if (((stopindex+3)-startindex)%3 ==0){
            return result = dna.substring(startindex, stopindex+3);
          
        }
        if (((stopindex+3)-startindex)%3 !=0){
            return result = "no gene: not a multiple of 3";
        }
        return result;
    }
    public void testSimpleGene(){
        String dna = "TACGCGCAGCTAA";
        System.out.println(" DNA String: " + dna);
        System.out.println("Gene: " + findSimpleGene(dna, "ATG", "TAA"));
        
        dna = "TTATGCGTCCGTTATGC";
        System.out.println("DNA String: " + dna);
        System.out.println("Gene: " + findSimpleGene(dna,"ATG", "TAA"));
        
        dna = "CGCATTAGCAATC";
        System.out.println("DNA String: " + dna);
        System.out.println("Gene: " + findSimpleGene(dna,"ATG", "TAA"));
        
        dna = "ATTTCGATGCACCCGTAAGC";
        System.out.println("DNA String: " + dna);
        System.out.println("Gene: " + findSimpleGene(dna,"ATG", "TAA"));
        
        dna = "ATTTCGATGCACCCGTAAGC";
        System.out.println("DNA String: " + dna);
        System.out.println("Gene: " + findSimpleGene(dna,"ATG", "TAA"));
    }
}

