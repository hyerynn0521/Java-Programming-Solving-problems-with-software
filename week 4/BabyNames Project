package BabyNames;
import edu.duke.*;
import org.apache.commons.csv.*;
import java.io.*;

/**
 * Write a description of BabyNames here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class BabyNames {
    public void totalBirths(FileResource fr){
        int totalBirths = 0;
        int totalBoys = 0;
        int totalGirls = 0;
        int numGirlName = 0;
        int numBoyName = 0;
        for (CSVRecord rec : fr.getCSVParser(false)){
            int numBorn = Integer.parseInt(rec.get(2));
            totalBirths += numBorn;
            if (rec.get(1).equals("M")){
                totalBoys+= numBorn;
                numBoyName ++;
            }
            else{
                totalGirls += numBorn;
                numGirlName ++;
            }
        }
        System.out.println("total birth = "+totalBirths);
        System.out.print("total boys = "+totalBoys);
        System.out.println(", total # of boy names = "+numBoyName);
        System.out.print("total girls = "+totalGirls);
        System.out.println(", total # of girl names = "+numGirlName);
    }
    public void testTotalBirths(){
        FileResource fr = new FileResource();
        totalBirths(fr);
    }
    public int getRank(int year, String name, String gender){
        FileResource fr = new FileResource("BabyNamesData/us_babynames_by_year/yob"+
        year+".csv");
        int rank = 0;
        for (CSVRecord rec: fr.getCSVParser(false)){
            if (rec.get(1).equals(gender)){
                if(rec.get(0).equals(name)){
                    rank+=1;
                    return rank;
                }
                else{
                    rank +=1;
                }
            }
            
        }
        return -1;
    }
    public void testGetRank(){
        int year = 1971;
        String name = "Frank";
        String gender = "M";
        System.out.println("Rank of the name " +name+" with gender "+
        gender+" is "+getRank(year, name, gender));
    }
    public String getName (int year, int rank, String gender){
        FileResource fr = new FileResource("BabyNamesData/us_babynames_by_year/yob"+
        year+".csv");
        String name = "";
        int currRank = 0;
        for (CSVRecord rec: fr.getCSVParser(false)){
            if (rec.get(1).equals(gender)){
                currRank += 1;
                if (currRank == rank){
                    name = rec.get(0);
                    return name;
                }
                
            }
            
        }
        return "NO NAME";
    }
    public void testGetName(){
        int year = 1980;
        int rank = 350;
        String gender = "F";
        System.out.println("The name that is in rank " +rank+" in gender "+gender + " is "
        +getName(year, rank, gender));
    }
    public void whatIsNameInYear(String name, int year, int newYear, String gender){
        FileResource fr = new FileResource("BabyNamesData/us_babynames_by_year/yob"+
        year+".csv");
        int rank = 0;
        String newName = "";
        String pronoun = "";
        for (CSVRecord rec: fr.getCSVParser(false)){
            if (rec.get(1).equals(gender)){
                if(rec.get(0).equals(name)){
                    rank+=1;
                    newName = getName(newYear, rank, gender);
                }
                else{
                    rank +=1;
                }
            }
        }
        if (gender.equals("M")){
            pronoun = "he";
        }
        else{
            pronoun = "she";
        }
        System.out.println(name+" born in "+ year+" would be "+newName+" if "+pronoun+ " was born in "+
        newYear);
    }
    public void testWhatIsNameInYear(){
        String name = "Owen";
        int year = 1974;
        int newYear = 2014;
        String gender = "M";
        
        whatIsNameInYear(name, year, newYear, gender);
    }
    public int yearOfHighestRank(String name, String gender){
        DirectoryResource dr = new DirectoryResource();
        int highestRankSoFar = 0;
        int currentRank = 0;
        int highestYear = 0;
        int currYear = 0;
        for (File f: dr.selectedFiles()){
            currYear = Integer.parseInt(f.getName().substring(3, 7));
            currentRank = getRank(currYear, name, gender);
            
            if (highestRankSoFar == 0){
                highestRankSoFar = currentRank;
                highestYear = currYear;
            }
            if (currentRank<highestRankSoFar){
                highestRankSoFar = currentRank;
                highestYear = currYear;
            }
           
        }
        return highestYear;
    }
    public void testYearOfHighestRank(){
        String name = "Mich";
        String gender = "M";
        int year = yearOfHighestRank( name, gender);
        System.out.println("Of the selected files, "+name+ " was most popular in "+year);
    }
    public double getAverageRank(String name, String gender){
        DirectoryResource dr = new DirectoryResource();
        double ranktotal = 0.0;
        double count = 0.0;
        double currentRank = 0.0;
        for (File f: dr.selectedFiles()){
            count ++;
            int year = Integer.parseInt(f.getName().substring(3, 7));
            currentRank = getRank(year, name, gender);
            if(currentRank != -1){
                ranktotal += currentRank;
            }
            else{
                return -1.0;
            }
        }
        return ranktotal/count;
    }
    public void testGetAverageRank(){
        String name = "Robert";
        String gender = "M";
        double averageRank = getAverageRank(name, gender);
        System.out.println("Average rank of the name "+name+ " with gender "+gender+
        " from the selected files is "+ averageRank);
    }
    public int getTotalBirthsRankedHigher (int year, String name, String gender){
        FileResource fr = new FileResource("BabyNamesData/us_babynames_by_year/yob"+
        year+".csv");
        int currentBirth = 0;
        int totalHigherRankBirth = 0;
        for (CSVRecord rec: fr.getCSVParser(false)){
            currentBirth = Integer.parseInt(rec.get(2));
            if (rec.get(1).equals(gender)){
                if (rec.get(0).equals(name)){
                    return totalHigherRankBirth;
                }
                else{
                    totalHigherRankBirth += currentBirth;
                }
            }
        }
        return totalHigherRankBirth;
    }
    public void testGetTotalBirthsRankedHigher(){
        int year = 1990;
        String name = "Drew";
        String gender = "M";
        int result = getTotalBirthsRankedHigher(year, name, gender);
        System.out.println("Total births ranked higher than "+name+" with gender "+
        gender+ " in "+year+" was "+result);
    }
}
